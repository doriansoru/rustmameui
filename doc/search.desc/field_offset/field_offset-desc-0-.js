searchState.loadedDescShard("field_offset", 0, "Type that can be used in the <code>PinFlag</code> parameter of …\nRepresents a pointer to a field of type <code>U</code> within the type <code>T</code>\nType that can be used in the <code>PinFlag</code> parameter of …\nApply the field offset to a reference.\nApply the field offset to a mutable reference.\nApply the field offset to a pinned reference and return a …\nApply the field offset to a pinned mutable reference and …\nApply the field offset to a native pointer.\nApply the field offset to a native mutable pointer.\nConvert this offset to an offset that is allowed to go …\nRemove the AllowPin flag\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the raw byte offset for this field offset.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a field offset via a lambda which returns a …\nConstruct a field offset directly from a byte offset.\nConstruct a field offset directly from a byte offset, …\nThis macro allows safe construction of a FieldOffset, by …\nUnapply the field offset to a reference.\nUnapply the field offset to a mutable reference.\nUnapply the field offset to a native pointer.\nUnapply the field offset to a native mutable pointer.")