searchState.loadedDescShard("gdk_pixbuf", 0, "Rust GDK-PixBuf bindings\nGet a flags value with all known bits set.\nReturn the inner pointer to the underlying C value.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nBorrows the underlying C value.\nBorrows the underlying C value mutably.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCreates a <code>Pixbuf</code> from a type implementing <code>Read</code> (like <code>File</code>).\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns a mutable slice to the pixbuf’s pixel data.\nTraits intended for blanket imports.\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nTraits intended for creating custom types.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nTraits intended for subclassing <code>PixbufAnimation</code>.\nTraits intended for subclassing <code>PixbufAnimationIter</code>.\nTraits intended for subclassing <code>PixbufLoader</code>.\nTime in milliseconds, returning <code>None</code> implies showing the …\nIf this subclass is an abstract class or not.\nTrait for defining boxed types.\nThe C class struct.\nTrait implemented by structs that implement a <code>GObject</code> C …\nTrait containing only the property related functions of …\nThe inner type\nThe C instance struct.\nTrait implemented by structs that implement a <code>GObject</code> C …\nTrait implemented by any type implementing <code>InstanceStruct</code> …\nList of interfaces implemented by this type.\nTrait for implementable interfaces.\nTrait for subclassable class structs.\n<code>GObject</code> type name.\n<code>GObject</code> type name.\nBoxed type name.\nShared type name.\nExtension trait for <code>glib::Object</code>’s class struct.\nTrait for implementors of <code>glib::Object</code> subclasses.\nThe central trait for defining a <code>GObject</code> interface.\nType methods required for an <code>ObjectInterface</code> …\nThe central trait for subclassing a <code>GObject</code> type.\nExtension methods for all <code>ObjectSubclass</code> impls.\nTrait implemented by any type implementing <code>ObjectSubclassIs</code>…\nType methods required for an <code>ObjectSubclass</code> implementation.\nParent Rust type to inherit from.\nPrerequisites for this interface.\nThe inner refcounted type\nTrait for defining shared types.\nCorresponding object subclass type for this instance …\nCorresponding object subclass type for this class struct.\nWrapper around this subclass defined with <code>wrapper!</code>\nProvides access to a raw pointer to InnerType\nReturns the class struct for this specific instance.\nOverride the vfuncs of all parent types.\nOverride the virtual methods of this class for the given …\nClass initialization.\nConstructed.\nProperties installed for this type.\nSimilar to <code>ObjectImpl</code> but auto-generated by the [<code>Properties</code>…\nSimilar to <code>ObjectImpl</code> but auto-generated by the [<code>Properties</code>…\nDisposes of the object.\nReturns the implementation from an instance.\nGet interface from an instance.\nReturns the implementation from an instance.\nGet interface from an instance.\nConverts a raw pointer to InnerType to a RefCounted object\nConstructs a SharedType from a RefCountedType\nReturns the implementation for from this instance struct, …\nReturns the implementation (the private Rust struct) of …\nReturns the corresponding object instance.\nReturns a pointer to the instance implementation specific …\nInstance specific initialization.\nInstance specific initialization.\nInstance specific initialization.\nPerforms additional instance initialization.\nOverride the virtual methods of this interface for the …\nInterface initialization.\nConverts the RefCounted object to a raw pointer to …\nConverts the SharedType into its inner RefCountedType\nConstructor.\nFunction to be called when property change is notified for …\nReturns the corresponding object instance.\nChain up to the parent class’ implementation of …\nChain up to the parent class’ implementation of …\nChain up to the parent class’ implementation of …\nProperties installed for this interface.\nProperties installed for this type.\nProperty getter.\nThe function used to increment the inner type refcount\nReturns a new reference-counted wrapper around <code>self</code>.\nProperty setter.\nChain up to parent class signal handler.\nSignals installed for this interface.\nSignals installed for this type.\nReturns the <code>glib::Type</code> ID of the subclass.\nReturns the <code>glib::Type</code> ID of the interface.\nStorage for the type-specific data used during …\nAdditional type initialization.\nAdditional type initialization.\nConstructor.")