searchState.loadedDescShard("pango", 0, "Rust Pango bindings\nThe result of <code>LayoutLine::x_to_index</code>.\nThe scale factor for one magnification step (1.2).\nThe scale factor for normal size (1.0).\nThe scale factor for one shrinking step (1 / 1.2).\nThe scale factor for three magnification steps (1.2 * 1.2 …\nThe scale factor for three shrinking steps (1 / (1.2 * 1.2 …\nThe scale factor for two magnification steps (1.2 * 1.2).\nThe scale factor for two shrinking steps (1 / (1.2 * 1.2)).\nGet a flags value with all known bits set.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe UTF-8 byte offset of the grapheme closest to the …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether or not the position was within the bounds of the …\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe length of this line’s text, in bytes.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nTraits and essential types intended for blanket imports.\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe byte index of the start of this line into the text …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe codepoint within the grapheme of the position.\nThe bitwise or (<code>|</code>) of the bits in two flags values.")