(function() {
    var type_impls = Object.fromEntries([["dioxus_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callback%3CArgs,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#438-525\">Source</a><a href=\"#impl-Callback%3CArgs,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args: 'static, Ret: 'static&gt; <a class=\"struct\" href=\"dioxus_core/prelude/struct.Callback.html\" title=\"struct dioxus_core::prelude::Callback\">Callback</a>&lt;Args, Ret&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#442-455\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_core/prelude/struct.Callback.html#tymethod.new\" class=\"fn\">new</a>&lt;MaybeAsync: <a class=\"trait\" href=\"dioxus_core/trait.SpawnIfAsync.html\" title=\"trait dioxus_core::SpawnIfAsync\">SpawnIfAsync</a>&lt;Marker, Ret&gt;, Marker&gt;(\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Args) -&gt; MaybeAsync + 'static,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"dioxus_core/prelude/struct.Callback.html\" title=\"struct dioxus_core::prelude::Callback\"><code>Callback</code></a> from an <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\"><code>FnMut</code></a>. The callback is owned by the current scope and will be dropped when the scope is dropped.\nThis should not be called directly in the body of a component because it will not be dropped until the component is dropped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leak\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#459-472\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_core/prelude/struct.Callback.html#tymethod.leak\" class=\"fn\">leak</a>(f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Args) -&gt; Ret + 'static) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Leak a new <a href=\"dioxus_core/prelude/struct.Callback.html\" title=\"struct dioxus_core::prelude::Callback\"><code>Callback</code></a> that will not be dropped unless it is manually dropped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#486-497\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_core/prelude/struct.Callback.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, arguments: Args) -&gt; Ret</h4></section></summary><div class=\"docblock\"><p>Call this callback with the appropriate argument type</p>\n<p>This borrows the callback using a RefCell. Recursively calling a callback will cause a panic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_closure\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#500-502\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_core/prelude/struct.Callback.html#tymethod.into_closure\" class=\"fn\">into_closure</a>(self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Args) -&gt; Ret + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static</h4></section></summary><div class=\"docblock\"><p>Create a <code>impl FnMut + Copy</code> closure from the Closure type</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.release\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#507-509\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_core/prelude/struct.Callback.html#tymethod.release\" class=\"fn\">release</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Forcibly drop the internal handler callback, releasing memory</p>\n<p>This will force any future calls to “call” to not doing anything</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#512-518\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_core/prelude/struct.Callback.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, callback: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Args) -&gt; Ret&gt;)</h4></section></summary><div class=\"docblock\"><p>Replace the function in the callback with a new one</p>\n</div></details></div></details>",0,"dioxus_core::events::EventHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Callback%3CArgs,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#421-425\">Source</a><a href=\"#impl-Clone-for-Callback%3CArgs,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Ret&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"dioxus_core/prelude/struct.Callback.html\" title=\"struct dioxus_core::prelude::Callback\">Callback</a>&lt;Args, Ret&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#422-424\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","dioxus_core::events::EventHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Callback%3CArgs,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#275-282\">Source</a><a href=\"#impl-Debug-for-Callback%3CArgs,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Ret&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"dioxus_core/prelude/struct.Callback.html\" title=\"struct dioxus_core::prelude::Callback\">Callback</a>&lt;Args, Ret&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#276-281\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","dioxus_core::events::EventHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Callback%3CT,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#284-288\">Source</a><a href=\"#impl-Default-for-Callback%3CT,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: 'static, Ret: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"dioxus_core/prelude/struct.Callback.html\" title=\"struct dioxus_core::prelude::Callback\">Callback</a>&lt;T, Ret&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#285-287\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","dioxus_core::events::EventHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Callback%3CArgs,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#527-561\">Source</a><a href=\"#impl-Deref-for-Callback%3CArgs,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args: 'static, Ret: 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"dioxus_core/prelude/struct.Callback.html\" title=\"struct dioxus_core::prelude::Callback\">Callback</a>&lt;Args, Ret&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#528\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Args) -&gt; Ret</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#530-560\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","dioxus_core::events::EventHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Callback%3CArgs,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#427-431\">Source</a><a href=\"#impl-PartialEq-for-Callback%3CArgs,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args: 'static, Ret: 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"dioxus_core/prelude/struct.Callback.html\" title=\"struct dioxus_core::prelude::Callback\">Callback</a>&lt;Args, Ret&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#428-430\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","dioxus_core::events::EventHandler"],["<section id=\"impl-Copy-for-Callback%3CArgs,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_core/events.rs.html#419\">Source</a><a href=\"#impl-Copy-for-Callback%3CArgs,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Ret&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"dioxus_core/prelude/struct.Callback.html\" title=\"struct dioxus_core::prelude::Callback\">Callback</a>&lt;Args, Ret&gt;</h3></section>","Copy","dioxus_core::events::EventHandler"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[15725]}