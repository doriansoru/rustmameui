(function() {
    var type_impls = Object.fromEntries([["dioxus",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Global%3CMemo%3CT%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/memo.rs.html#27\">Source</a><a href=\"#impl-Debug-for-Global%3CMemo%3CT%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Memo.html\" title=\"struct dioxus::prelude::Memo\">Memo</a>&lt;T&gt;, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/memo.rs.html#27\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","dioxus::prelude::GlobalMemo"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Global%3CSignal%3CT%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/signal.rs.html#27\">Source</a><a href=\"#impl-Debug-for-Global%3CSignal%3CT%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T&gt;, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/signal.rs.html#27\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","dioxus::prelude::GlobalSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Global%3CT,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#35-37\">Source</a><a href=\"#impl-Deref-for-Global%3CT,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static + <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&lt;Target = R&gt; + <a class=\"trait\" href=\"dioxus/prelude/trait.InitializeFromFunction.html\" title=\"trait dioxus::prelude::InitializeFromFunction\">InitializeFromFunction</a>&lt;R&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,</div></h3><div class=\"docblock\"><p>Allow calling a signal with signal() syntax</p>\n</div></section></summary><div class=\"docblock\"><p>Currently only limited to copy types, though could probably specialize for string/arc/rc</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#39\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>() -&gt; R</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#41\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","dioxus::prelude::GlobalMemo","dioxus::prelude::GlobalSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Global%3CMemo%3CT%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/memo.rs.html#27\">Source</a><a href=\"#impl-Display-for-Global%3CMemo%3CT%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Memo.html\" title=\"struct dioxus::prelude::Memo\">Memo</a>&lt;T&gt;, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/memo.rs.html#27\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","dioxus::prelude::GlobalMemo"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Global%3CSignal%3CT%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/signal.rs.html#27\">Source</a><a href=\"#impl-Display-for-Global%3CSignal%3CT%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T&gt;, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/signal.rs.html#27\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","dioxus::prelude::GlobalSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Global%3CMemo%3CT%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/memo.rs.html#15\">Source</a><a href=\"#impl-Global%3CMemo%3CT%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Memo.html\" title=\"struct dioxus::prelude::Memo\">Memo</a>&lt;T&gt;, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.id\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/memo.rs.html#17\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.id\" class=\"fn\">id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"generational_box/struct.GenerationalBoxId.html\" title=\"struct generational_box::GenerationalBoxId\">GenerationalBoxId</a></h4></section></summary><div class=\"docblock\"><p>Get the generational id of the signal.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.memo\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/memo.rs.html#22\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.memo\" class=\"fn\">memo</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Memo.html\" title=\"struct dioxus::prelude::Memo\">Memo</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Resolve the global memo. This will try to get the existing value from the current virtual dom, and if it doesn’t exist, it will create a new one.</p>\n</div></details></div></details>",0,"dioxus::prelude::GlobalMemo"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Global%3CSignal%3CT%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/signal.rs.html#15\">Source</a><a href=\"#impl-Global%3CSignal%3CT%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T&gt;, T&gt;<div class=\"where\">where\n    T: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.id\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/signal.rs.html#17\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.id\" class=\"fn\">id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"generational_box/struct.GenerationalBoxId.html\" title=\"struct generational_box::GenerationalBoxId\">GenerationalBoxId</a></h4></section></summary><div class=\"docblock\"><p>Get the generational id of the signal.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signal\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/signal.rs.html#22\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.signal\" class=\"fn\">signal</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Resolve the global signal. This will try to get the existing value from the current virtual dom, and if it doesn’t exist, it will create a new one.</p>\n</div></details></div></details>",0,"dioxus::prelude::GlobalSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Global%3CT,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#104-106\">Source</a><a href=\"#impl-Global%3CT,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static + <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&lt;Target = R&gt; + <a class=\"trait\" href=\"dioxus/prelude/trait.InitializeFromFunction.html\" title=\"trait dioxus::prelude::InitializeFromFunction\">InitializeFromFunction</a>&lt;R&gt;,\n    R: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#109\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.write\" class=\"fn\">write</a>(&amp;self) -&gt; &lt;T as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'static, R&gt;</h4></section></summary><div class=\"docblock\"><p>Write this value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#116\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.with_mut\" class=\"fn\">with_mut</a>&lt;O&gt;(&amp;self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; O) -&gt; O</h4></section></summary><div class=\"docblock\"><p>Run a closure with a mutable reference to the signal’s value.\nIf the signal has been dropped, this will panic.</p>\n</div></details></div></details>",0,"dioxus::prelude::GlobalMemo","dioxus::prelude::GlobalSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Global%3CT,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#121-123\">Source</a><a href=\"#impl-Global%3CT,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static + <a class=\"trait\" href=\"dioxus/prelude/trait.InitializeFromFunction.html\" title=\"trait dioxus::prelude::InitializeFromFunction\">InitializeFromFunction</a>&lt;R&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#127\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.new\" class=\"fn\">new</a>(constructor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.fn.html\">fn</a>() -&gt; R) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new global value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_name\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#140\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.with_name\" class=\"fn\">with_name</a>(\n    constructor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.fn.html\">fn</a>() -&gt; R,\n    key: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt;</h4></section></summary><div class=\"docblock\"><p>Create this global signal with a specific key.\nThis is useful for ensuring that the signal is unique across the application and accessible from\noutside the application too.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_location\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#157-163\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.with_location\" class=\"fn\">with_location</a>(\n    constructor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.fn.html\">fn</a>() -&gt; R,\n    file: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>,\n    line: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n    column: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt;</h4></section></summary><div class=\"docblock\"><p>Create this global signal with a specific key.\nThis is useful for ensuring that the signal is unique across the application and accessible from\noutside the application too.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#177\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.key\" class=\"fn\">key</a>(&amp;self) -&gt; <a class=\"enum\" href=\"dioxus/prelude/enum.GlobalKey.html\" title=\"enum dioxus::prelude::GlobalKey\">GlobalKey</a>&lt;'static&gt;</h4></section></summary><div class=\"docblock\"><p>Get the key for this global</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#183\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.resolve\" class=\"fn\">resolve</a>(&amp;self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Resolve the global value. This will try to get the existing value from the current virtual dom, and if it doesn’t exist, it will create a new one.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.origin_scope\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#206\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Global.html#tymethod.origin_scope\" class=\"fn\">origin_scope</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.ScopeId.html\" title=\"struct dioxus::prelude::ScopeId\">ScopeId</a></h4></section></summary><div class=\"docblock\"><p>Get the scope the signal was created in.</p>\n</div></details></div></details>",0,"dioxus::prelude::GlobalMemo","dioxus::prelude::GlobalSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CT%3E-for-Global%3CMemo%3CT%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/memo.rs.html#27\">Source</a><a href=\"#impl-PartialEq%3CT%3E-for-Global%3CMemo%3CT%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Memo.html\" title=\"struct dioxus::prelude::Memo\">Memo</a>&lt;T&gt;, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/memo.rs.html#27\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<T>","dioxus::prelude::GlobalMemo"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CT%3E-for-Global%3CSignal%3CT%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/signal.rs.html#27\">Source</a><a href=\"#impl-PartialEq%3CT%3E-for-Global%3CSignal%3CT%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T&gt;, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/signal.rs.html#27\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<T>","dioxus::prelude::GlobalSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Readable-for-Global%3CT,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#46-48\">Source</a><a href=\"#impl-Readable-for-Global%3CT,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R&gt; <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static + <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&lt;Target = R&gt; + <a class=\"trait\" href=\"dioxus/prelude/trait.InitializeFromFunction.html\" title=\"trait dioxus::prelude::InitializeFromFunction\">InitializeFromFunction</a>&lt;R&gt;,\n    R: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#50\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = R</h4></section></summary><div class='docblock'>The target type of the reference.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Storage\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#51\">Source</a><a href=\"#associatedtype.Storage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" class=\"associatedtype\">Storage</a> = &lt;T as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a></h4></section></summary><div class='docblock'>The type of the storage this readable uses.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#54-56\">Source</a><a href=\"#method.try_read_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#tymethod.try_read_unchecked\" class=\"fn\">try_read_unchecked</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'static, &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowError.html\" title=\"enum dioxus::prelude::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class='docblock'>Try to get a reference to the value without checking the lifetime. This will subscribe the current scope to the signal. <a href=\"dioxus/prelude/trait.Readable.html#tymethod.try_read_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_peek_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#61\">Source</a><a href=\"#method.try_peek_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#tymethod.try_peek_unchecked\" class=\"fn\">try_peek_unchecked</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'static, &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowError.html\" title=\"enum dioxus::prelude::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class='docblock'>Try to peek the current value of the signal without subscribing to updates. If the value has\nbeen dropped, this will return an error. <a href=\"dioxus/prelude/trait.Readable.html#tymethod.try_peek_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#68-70\">Source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.map\" class=\"fn\">map</a>&lt;O&gt;(\n    self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;O</a> + 'static,\n) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.MappedSignal.html\" title=\"struct dioxus::prelude::MappedSignal\">MappedSignal</a>&lt;O, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,</div></h4></section></summary><div class='docblock'>Map the readable type to a new type. This lets you provide a view into a readable type without needing to clone the inner value. <a href=\"dioxus/prelude/trait.Readable.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#106\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.read\" class=\"fn\">read</a>(&amp;self) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get the current value of the state. If this is a signal, this will subscribe the current scope to the signal.\nIf the value has been dropped, this will panic. Calling this on a Signal is the same as\nusing the signal() syntax to read and subscribe to its value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#112\">Source</a><a href=\"#method.try_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.try_read\" class=\"fn\">try_read</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowError.html\" title=\"enum dioxus::prelude::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class='docblock'>Try to get the current value of the state. If this is a signal, this will subscribe the current scope to the signal.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#121\">Source</a><a href=\"#method.read_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.read_unchecked\" class=\"fn\">read_unchecked</a>(\n    &amp;self,\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'static, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get a reference to the value without checking the lifetime. This will subscribe the current scope to the signal. <a href=\"dioxus/prelude/trait.Readable.html#method.read_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#167\">Source</a><a href=\"#method.peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.peek\" class=\"fn\">peek</a>(&amp;self) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get the current value of the state without subscribing to updates. If the value has been dropped, this will panic. <a href=\"dioxus/prelude/trait.Readable.html#method.peek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#174\">Source</a><a href=\"#method.try_peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.try_peek\" class=\"fn\">try_peek</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowError.html\" title=\"enum dioxus::prelude::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class='docblock'>Try to peek the current value of the signal without subscribing to updates. If the value has\nbeen dropped, this will return an error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#183\">Source</a><a href=\"#method.peek_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.peek_unchecked\" class=\"fn\">peek_unchecked</a>(\n    &amp;self,\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'static, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get the current value of the signal without checking the lifetime. <strong>Unlike read, this will not subscribe the current scope to the signal which can cause parts of your UI to not update.</strong> <a href=\"dioxus/prelude/trait.Readable.html#method.peek_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#197-199\">Source</a><a href=\"#method.cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a><div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Clone the inner value and return it. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#206\">Source</a><a href=\"#method.with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.with\" class=\"fn\">with</a>&lt;O&gt;(&amp;self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>) -&gt; O) -&gt; O</h4></section></summary><div class='docblock'>Run a function with a reference to the value. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#212\">Source</a><a href=\"#method.with_peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.with_peek\" class=\"fn\">with_peek</a>&lt;O&gt;(&amp;self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>) -&gt; O) -&gt; O</h4></section></summary><div class='docblock'>Run a function with a reference to the value. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#218-220\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.index\" class=\"fn\">index</a>&lt;I&gt;(\n    &amp;self,\n    index: I,\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'_, &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Index into the inner value and return a reference to the result. If the value has been dropped or the index is invalid, this will panic.</div></details></div></details>","Readable","dioxus::prelude::GlobalMemo","dioxus::prelude::GlobalSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Writable-for-Global%3CT,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#66-68\">Source</a><a href=\"#impl-Writable-for-Global%3CT,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R&gt; <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static + <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&lt;Target = R&gt; + <a class=\"trait\" href=\"dioxus/prelude/trait.InitializeFromFunction.html\" title=\"trait dioxus::prelude::InitializeFromFunction\">InitializeFromFunction</a>&lt;R&gt;,\n    R: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mut\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#70\">Source</a><a href=\"#associatedtype.Mut\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" class=\"associatedtype\">Mut</a>&lt;'a, Read: 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; = &lt;T as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'a, Read&gt;</h4></section></summary><div class='docblock'>The type of the reference.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#72-75\">Source</a><a href=\"#method.map_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#tymethod.map_mut\" class=\"fn\">map_mut</a>&lt;I, U, F&gt;(\n    ref_: &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, I&gt;,\n    f: F,\n) -&gt; &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, U&gt;<div class=\"where\">where\n    U: 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut U</a>,\n    I: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Map the reference to a new type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_map_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#79-86\">Source</a><a href=\"#method.try_map_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#tymethod.try_map_mut\" class=\"fn\">try_map_mut</a>&lt;I, U, F&gt;(\n    ref_: &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, I&gt;,\n    f: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, U&gt;&gt;<div class=\"where\">where\n    I: 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut U</a>&gt;,</div></h4></section></summary><div class='docblock'>Try to map the reference to a new type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_lifetime_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#90-92\">Source</a><a href=\"#method.downcast_lifetime_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#tymethod.downcast_lifetime_mut\" class=\"fn\">downcast_lifetime_mut</a>&lt;'a, 'b, Read&gt;(\n    mut_: &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'a, Read&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'b, Read&gt;<div class=\"where\">where\n    'a: 'b,\n    Read: 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Downcast a mutable reference in a RefMut to a more specific lifetime <a href=\"dioxus/prelude/trait.Writable.html#tymethod.downcast_lifetime_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_write_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/global/mod.rs.html#97-99\">Source</a><a href=\"#method.try_write_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#tymethod.try_write_unchecked\" class=\"fn\">try_write_unchecked</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'static, &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Global.html\" title=\"struct dioxus::prelude::Global\">Global</a>&lt;T, R&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowMutError.html\" title=\"enum dioxus::prelude::BorrowMutError\">BorrowMutError</a>&gt;</h4></section></summary><div class='docblock'>Try to get a mutable reference to the value without checking the lifetime. This will update any subscribers. <a href=\"dioxus/prelude/trait.Writable.html#tymethod.try_write_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#59\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.write\" class=\"fn\">write</a>(&amp;mut self) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get a mutable reference to the value. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#65\">Source</a><a href=\"#method.try_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.try_write\" class=\"fn\">try_write</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowMutError.html\" title=\"enum dioxus::prelude::BorrowMutError\">BorrowMutError</a>&gt;</h4></section></summary><div class='docblock'>Try to get a mutable reference to the value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#80\">Source</a><a href=\"#method.write_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.write_unchecked\" class=\"fn\">write_unchecked</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'static, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get a mutable reference to the value without checking the lifetime. This will update any subscribers. <a href=\"dioxus/prelude/trait.Writable.html#method.write_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#86\">Source</a><a href=\"#method.with_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.with_mut\" class=\"fn\">with_mut</a>&lt;O&gt;(&amp;mut self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>) -&gt; O) -&gt; O</h4></section></summary><div class='docblock'>Run a function with a mutable reference to the value. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#92-94\">Source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.set\" class=\"fn\">set</a>(&amp;mut self, value: Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>)<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Set the value of the signal. This will trigger an update on all subscribers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#101-103\">Source</a><a href=\"#method.toggle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.toggle\" class=\"fn\">toggle</a>(&amp;mut self)<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a>&lt;Output = Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Invert the boolean value of the signal. This will trigger an update on all subscribers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#110-115\">Source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.index_mut\" class=\"fn\">index_mut</a>&lt;I&gt;(\n    &amp;mut self,\n    index: I,\n) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Index into the inner value and return a reference to the result.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#122-124\">Source</a><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.take\" class=\"fn\">take</a>(&amp;mut self) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a><div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Takes the value out of the Signal, leaving a Default in its place.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#131-133\">Source</a><a href=\"#method.replace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.replace\" class=\"fn\">replace</a>(&amp;mut self, value: Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a><div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Replace the value in the Signal, returning the old value.</div></details></div></details>","Writable","dioxus::prelude::GlobalMemo","dioxus::prelude::GlobalSignal"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[71130]}