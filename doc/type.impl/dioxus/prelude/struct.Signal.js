(function() {
    var type_impls = Object.fromEntries([["dioxus",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CT%3E-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#impl-Add%3CT%3E-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: T) -&gt; &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<T>","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CT%3E-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#impl-AddAssign%3CT%3E-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: T)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<T>","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#709\">Source</a><a href=\"#impl-Clone-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#710\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#705\">Source</a><a href=\"#impl-Debug-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#705\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#706\">Source</a><a href=\"#impl-Default-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#706\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#488\">Source</a><a href=\"#impl-Deref-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt; + 'static,</div></h3><div class=\"docblock\"><p>Allow calling a signal with signal() syntax</p>\n</div></section></summary><div class=\"docblock\"><p>Currently only limited to copy types, though could probably specialize for string/arc/rc</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#489\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>() -&gt; T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#491\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#705\">Source</a><a href=\"#impl-Display-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#705\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#impl-Div%3CT%3E-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: T) -&gt; &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#impl-DivAssign%3CT%3E-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#impl-Mul%3CT%3E-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: T) -&gt; &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#impl-MulAssign%3CT%3E-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#477\">Source</a><a href=\"#impl-PartialEq-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#478\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Readable-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#385\">Source</a><a href=\"#impl-Readable-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_peek_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#405\">Source</a><a href=\"#method.try_peek_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#tymethod.try_peek_unchecked\" class=\"fn\">try_peek_unchecked</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'static, &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowError.html\" title=\"enum dioxus::prelude::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the current value of the signal. <strong>Unlike read, this will not subscribe the current scope to the signal which can cause parts of your UI to not update.</strong></p>\n<p>If the signal has been dropped, this will panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#386\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The target type of the reference.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Storage\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#387\">Source</a><a href=\"#associatedtype.Storage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" class=\"associatedtype\">Storage</a> = S</h4></section></summary><div class='docblock'>The type of the storage this readable uses.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#390\">Source</a><a href=\"#method.try_read_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#tymethod.try_read_unchecked\" class=\"fn\">try_read_unchecked</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'static, &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowError.html\" title=\"enum dioxus::prelude::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class='docblock'>Try to get a reference to the value without checking the lifetime. This will subscribe the current scope to the signal. <a href=\"dioxus/prelude/trait.Readable.html#tymethod.try_read_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#68-70\">Source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.map\" class=\"fn\">map</a>&lt;O&gt;(\n    self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;O</a> + 'static,\n) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.MappedSignal.html\" title=\"struct dioxus::prelude::MappedSignal\">MappedSignal</a>&lt;O, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,</div></h4></section></summary><div class='docblock'>Map the readable type to a new type. This lets you provide a view into a readable type without needing to clone the inner value. <a href=\"dioxus/prelude/trait.Readable.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#106\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.read\" class=\"fn\">read</a>(&amp;self) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get the current value of the state. If this is a signal, this will subscribe the current scope to the signal.\nIf the value has been dropped, this will panic. Calling this on a Signal is the same as\nusing the signal() syntax to read and subscribe to its value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#112\">Source</a><a href=\"#method.try_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.try_read\" class=\"fn\">try_read</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowError.html\" title=\"enum dioxus::prelude::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class='docblock'>Try to get the current value of the state. If this is a signal, this will subscribe the current scope to the signal.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#121\">Source</a><a href=\"#method.read_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.read_unchecked\" class=\"fn\">read_unchecked</a>(\n    &amp;self,\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'static, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get a reference to the value without checking the lifetime. This will subscribe the current scope to the signal. <a href=\"dioxus/prelude/trait.Readable.html#method.read_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#167\">Source</a><a href=\"#method.peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.peek\" class=\"fn\">peek</a>(&amp;self) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get the current value of the state without subscribing to updates. If the value has been dropped, this will panic. <a href=\"dioxus/prelude/trait.Readable.html#method.peek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#174\">Source</a><a href=\"#method.try_peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.try_peek\" class=\"fn\">try_peek</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowError.html\" title=\"enum dioxus::prelude::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class='docblock'>Try to peek the current value of the signal without subscribing to updates. If the value has\nbeen dropped, this will return an error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#183\">Source</a><a href=\"#method.peek_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.peek_unchecked\" class=\"fn\">peek_unchecked</a>(\n    &amp;self,\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'static, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get the current value of the signal without checking the lifetime. <strong>Unlike read, this will not subscribe the current scope to the signal which can cause parts of your UI to not update.</strong> <a href=\"dioxus/prelude/trait.Readable.html#method.peek_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#197-199\">Source</a><a href=\"#method.cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a><div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Clone the inner value and return it. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#206\">Source</a><a href=\"#method.with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.with\" class=\"fn\">with</a>&lt;O&gt;(&amp;self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>) -&gt; O) -&gt; O</h4></section></summary><div class='docblock'>Run a function with a reference to the value. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#212\">Source</a><a href=\"#method.with_peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.with_peek\" class=\"fn\">with_peek</a>&lt;O&gt;(&amp;self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>) -&gt; O) -&gt; O</h4></section></summary><div class='docblock'>Run a function with a reference to the value. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#218-220\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Readable.html#method.index\" class=\"fn\">index</a>&lt;I&gt;(\n    &amp;self,\n    index: I,\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus::prelude::Readable::Storage\">Storage</a> as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus::prelude::AnyStorage::Ref\">Ref</a>&lt;'_, &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Index into the inner value and return a reference to the result. If the value has been dropped or the index is invalid, this will panic.</div></details></div></details>","Readable","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#147\">Source</a><a href=\"#impl-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_maybe_sync\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#150\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Signal.html#tymethod.new_maybe_sync\" class=\"fn\">new_maybe_sync</a>(value: T) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new Signal. Signals are a Copy state management solution with automatic dependency tracking.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_caller\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#173\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Signal.html#tymethod.new_with_caller\" class=\"fn\">new_with_caller</a>(\n    value: T,\n    caller: &amp;'static <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/panic/location/struct.Location.html\" title=\"struct core::panic::location::Location\">Location</a>&lt;'static&gt;,\n) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new Signal with an explicit caller. Signals are a Copy state management solution with automatic dependency tracking.</p>\n<p>This method can be used to provide the correct caller information for signals that are created in closures:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[track_caller]\n</span><span class=\"kw\">fn </span>use_my_signal(function: <span class=\"kw\">impl </span>FnOnce() -&gt; i32) -&gt; Signal&lt;i32&gt; {\n    <span class=\"comment\">// We capture the caller information outside of the closure so that it points to the caller of use_my_custom_hook instead of the closure\n    </span><span class=\"kw\">let </span>caller = std::panic::Location::caller();\n    use_hook(<span class=\"kw\">move </span>|| Signal::new_with_caller(function(), caller))\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leak_with_caller\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#186\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Signal.html#tymethod.leak_with_caller\" class=\"fn\">leak_with_caller</a>(\n    value: T,\n    caller: &amp;'static <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/panic/location/struct.Location.html\" title=\"struct core::panic::location::Location\">Location</a>&lt;'static&gt;,\n) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new Signal without an owner. This will leak memory if you don’t manually drop it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_maybe_sync_in_scope\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#200\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Signal.html#tymethod.new_maybe_sync_in_scope\" class=\"fn\">new_maybe_sync_in_scope</a>(value: T, owner: <a class=\"struct\" href=\"dioxus/prelude/struct.ScopeId.html\" title=\"struct dioxus::prelude::ScopeId\">ScopeId</a>) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new signal with a custom owner scope. The signal will be dropped when the owner scope is dropped instead of the current scope.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_maybe_sync_in_scope_with_caller\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#206\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Signal.html#tymethod.new_maybe_sync_in_scope_with_caller\" class=\"fn\">new_maybe_sync_in_scope_with_caller</a>(\n    value: T,\n    owner: <a class=\"struct\" href=\"dioxus/prelude/struct.ScopeId.html\" title=\"struct dioxus::prelude::ScopeId\">ScopeId</a>,\n    caller: &amp;'static <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/panic/location/struct.Location.html\" title=\"struct core::panic::location::Location\">Location</a>&lt;'static&gt;,\n) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new signal with a custom owner scope and a custom caller. The signal will be dropped when the owner scope is dropped instead of the current scope.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.point_to\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#225\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Signal.html#tymethod.point_to\" class=\"fn\">point_to</a>(&amp;self, other: <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowError.html\" title=\"enum dioxus::prelude::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Point to another signal. This will subscribe the other signal to all subscribers of this signal.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.manually_drop\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#236\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Signal.html#tymethod.manually_drop\" class=\"fn\">manually_drop</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Drop the value out of the signal, invalidating the signal in the process.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.origin_scope\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#241\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Signal.html#tymethod.origin_scope\" class=\"fn\">origin_scope</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dioxus/prelude/struct.ScopeId.html\" title=\"struct dioxus::prelude::ScopeId\">ScopeId</a></h4></section></summary><div class=\"docblock\"><p>Get the scope the signal was created in.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.id\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#259\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Signal.html#tymethod.id\" class=\"fn\">id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"generational_box/struct.GenerationalBoxId.html\" title=\"struct generational_box::GenerationalBoxId\">GenerationalBoxId</a></h4></section></summary><div class=\"docblock\"><p>Get the generational id of the signal.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_silent\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#380\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus/prelude/struct.Signal.html#tymethod.write_silent\" class=\"fn\">write_silent</a>(&amp;self) -&gt; &lt;S as <a class=\"trait\" href=\"dioxus/prelude/trait.AnyStorage.html\" title=\"trait dioxus::prelude::AnyStorage\">AnyStorage</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.AnyStorage.html#associatedtype.Mut\" title=\"type dioxus::prelude::AnyStorage::Mut\">Mut</a>&lt;'static, T&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This pattern is no longer recommended. Prefer <code>peek</code> or creating new signals instead.</span></div></span></summary><div class=\"docblock\"><p><strong>This pattern is no longer recommended. Prefer <a href=\"dioxus/prelude/struct.Signal.html#method.peek\" title=\"method dioxus::prelude::Signal::peek\"><code>peek</code></a> or creating new signals instead.</strong></p>\n<p>This function is the equivalent of the <a href=\"https://docs.rs/dioxus/latest/dioxus/prelude/struct.UseRef.html#method.write_silent\">write_silent</a> method on use_ref.</p>\n<h6 id=\"what-you-should-use-instead\"><a class=\"doc-anchor\" href=\"#what-you-should-use-instead\">§</a>What you should use instead</h6><h6 id=\"reading-and-writing-to-data-in-the-same-scope\"><a class=\"doc-anchor\" href=\"#reading-and-writing-to-data-in-the-same-scope\">§</a>Reading and Writing to data in the same scope</h6>\n<p>Reading and writing to the same signal in the same scope will cause that scope to rerun forever:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>signal = use_signal(|| <span class=\"number\">0</span>);\n<span class=\"comment\">// This makes the scope rerun whenever we write to the signal\n</span><span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">*</span>signal.read());\n<span class=\"comment\">// This will rerun the scope because we read the signal earlier in the same scope\n</span><span class=\"kw-2\">*</span>signal.write() += <span class=\"number\">1</span>;</code></pre></div>\n<p>You may have used the write_silent method to avoid this infinite loop with use_ref like this:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>signal = use_signal(|| <span class=\"number\">0</span>);\n<span class=\"comment\">// This makes the scope rerun whenever we write to the signal\n</span><span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">*</span>signal.read());\n<span class=\"comment\">// Write silent will not rerun any subscribers\n</span><span class=\"kw-2\">*</span>signal.write_silent() += <span class=\"number\">1</span>;</code></pre></div>\n<p>Instead you can use the <a href=\"dioxus/prelude/struct.Signal.html#method.peek\" title=\"method dioxus::prelude::Signal::peek\"><code>peek</code></a> and <a href=\"dioxus/prelude/struct.Signal.html#method.write\" title=\"method dioxus::prelude::Signal::write\"><code>write</code></a> methods instead. The peek method will not subscribe to the current scope which will avoid an infinite loop if you are reading and writing to the same signal in the same scope.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>signal = use_signal(|| <span class=\"number\">0</span>);\n<span class=\"comment\">// Peek will read the value but not subscribe to the current scope\n</span><span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">*</span>signal.peek());\n<span class=\"comment\">// Write will update any subscribers which does not include the current scope\n</span><span class=\"kw-2\">*</span>signal.write() += <span class=\"number\">1</span>;</code></pre></div>\n<h6 id=\"reading-and-writing-to-different-data\"><a class=\"doc-anchor\" href=\"#reading-and-writing-to-different-data\">§</a>Reading and Writing to different data</h6><h6 id=\"why-is-this-pattern-no-longer-recommended\"><a class=\"doc-anchor\" href=\"#why-is-this-pattern-no-longer-recommended\">§</a>Why is this pattern no longer recommended?</h6>\n<p>This pattern is no longer recommended because it is very easy to allow your state and UI to grow out of sync. <code>write_silent</code> globally opts out of automatic state updates which can be difficult to reason about.</p>\n<p>Lets take a look at an example:\nmain.rs:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>app() -&gt; Element {\n    <span class=\"kw\">let </span>signal = use_context_provider(|| Signal::new(<span class=\"number\">0</span>));\n\n    <span class=\"comment\">// We want to log the value of the signal whenever the app component reruns\n    </span><span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">*</span>signal.read());\n\n    <span class=\"macro\">rsx!</span> {\n        button {\n            <span class=\"comment\">// If we don't want to rerun the app component when the button is clicked, we can use write_silent\n            </span>onclick: <span class=\"kw\">move </span>|<span class=\"kw\">_</span>| <span class=\"kw-2\">*</span>signal.write_silent() += <span class=\"number\">1</span>,\n            <span class=\"string\">\"Increment\"\n        </span>}\n        Child {}\n    }\n}</code></pre></div>\n<p>child.rs:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>Child() -&gt; Element {\n    <span class=\"kw\">let </span>signal: Signal&lt;i32&gt; = use_context();\n\n    <span class=\"comment\">// It is difficult to tell that changing the button to use write_silent in the main.rs file will cause UI to be out of sync in a completely different file\n    </span><span class=\"macro\">rsx!</span> {\n        <span class=\"string\">\"{signal}\"\n    </span>}\n}</code></pre></div>\n<p>Instead <a href=\"dioxus/prelude/struct.Signal.html#method.peek\" title=\"method dioxus::prelude::Signal::peek\"><code>peek</code></a> locally opts out of automatic state updates explicitly for a specific read which is easier to reason about.</p>\n<p>Here is the same example using peek:\nmain.rs:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>app() -&gt; Element {\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>signal = use_context_provider(|| Signal::new(<span class=\"number\">0</span>));\n\n    <span class=\"comment\">// We want to log the value of the signal whenever the app component reruns, but we don't want to rerun the app component when the signal is updated so we use peek instead of read\n    </span><span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, <span class=\"kw-2\">*</span>signal.peek());\n\n    <span class=\"macro\">rsx!</span> {\n        button {\n            <span class=\"comment\">// We can use write like normal and update the child component automatically\n            </span>onclick: <span class=\"kw\">move </span>|<span class=\"kw\">_</span>| <span class=\"kw-2\">*</span>signal.write() += <span class=\"number\">1</span>,\n            <span class=\"string\">\"Increment\"\n        </span>}\n        Child {}\n    }\n}</code></pre></div>\n<p>child.rs:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>Child() -&gt; Element {\n    <span class=\"kw\">let </span>signal: Signal&lt;i32&gt; = use_context();\n\n    <span class=\"macro\">rsx!</span> {\n        <span class=\"string\">\"{signal}\"\n    </span>}\n}</code></pre></div>\n</div></details></div></details>",0,"dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CT%3E-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#impl-Sub%3CT%3E-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: T) -&gt; &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<T>","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CT%3E-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#impl-SubAssign%3CT%3E-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#707\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: T)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<T>","dioxus::prelude::SyncSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Writable-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#412\">Source</a><a href=\"#impl-Writable-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mut\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#413\">Source</a><a href=\"#associatedtype.Mut\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" class=\"associatedtype\">Mut</a>&lt;'a, R: 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; = <a class=\"struct\" href=\"dioxus/prelude/struct.Write.html\" title=\"struct dioxus::prelude::Write\">Write</a>&lt;'a, R, S&gt;</h4></section></summary><div class='docblock'>The type of the reference.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#415-418\">Source</a><a href=\"#method.map_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#tymethod.map_mut\" class=\"fn\">map_mut</a>&lt;I, U, F&gt;(\n    ref_: &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, I&gt;,\n    f: F,\n) -&gt; &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, U&gt;<div class=\"where\">where\n    U: 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut U</a>,\n    I: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Map the reference to a new type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_map_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#422-429\">Source</a><a href=\"#method.try_map_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#tymethod.try_map_mut\" class=\"fn\">try_map_mut</a>&lt;I, U, F&gt;(\n    ref_: &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, I&gt;,\n    f: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, U&gt;&gt;<div class=\"where\">where\n    I: 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut U</a>&gt;,</div></h4></section></summary><div class='docblock'>Try to map the reference to a new type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_lifetime_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#433-435\">Source</a><a href=\"#method.downcast_lifetime_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#tymethod.downcast_lifetime_mut\" class=\"fn\">downcast_lifetime_mut</a>&lt;'a, 'b, R&gt;(\n    mut_: &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'a, R&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'b, R&gt;<div class=\"where\">where\n    'a: 'b,\n    R: 'static + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Downcast a mutable reference in a RefMut to a more specific lifetime <a href=\"dioxus/prelude/trait.Writable.html#tymethod.downcast_lifetime_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_write_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#440-442\">Source</a><a href=\"#method.try_write_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#tymethod.try_write_unchecked\" class=\"fn\">try_write_unchecked</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Writable.html\" title=\"trait dioxus::prelude::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'static, &lt;<a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt; as <a class=\"trait\" href=\"dioxus/prelude/trait.Readable.html\" title=\"trait dioxus::prelude::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowMutError.html\" title=\"enum dioxus::prelude::BorrowMutError\">BorrowMutError</a>&gt;</h4></section></summary><div class='docblock'>Try to get a mutable reference to the value without checking the lifetime. This will update any subscribers. <a href=\"dioxus/prelude/trait.Writable.html#tymethod.try_write_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#59\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.write\" class=\"fn\">write</a>(&amp;mut self) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get a mutable reference to the value. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#65\">Source</a><a href=\"#method.try_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.try_write\" class=\"fn\">try_write</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;, <a class=\"enum\" href=\"dioxus/prelude/enum.BorrowMutError.html\" title=\"enum dioxus::prelude::BorrowMutError\">BorrowMutError</a>&gt;</h4></section></summary><div class='docblock'>Try to get a mutable reference to the value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#80\">Source</a><a href=\"#method.write_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.write_unchecked\" class=\"fn\">write_unchecked</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'static, Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>Get a mutable reference to the value without checking the lifetime. This will update any subscribers. <a href=\"dioxus/prelude/trait.Writable.html#method.write_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#86\">Source</a><a href=\"#method.with_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.with_mut\" class=\"fn\">with_mut</a>&lt;O&gt;(&amp;mut self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>) -&gt; O) -&gt; O</h4></section></summary><div class='docblock'>Run a function with a mutable reference to the value. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#92-94\">Source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.set\" class=\"fn\">set</a>(&amp;mut self, value: Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>)<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Set the value of the signal. This will trigger an update on all subscribers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#101-103\">Source</a><a href=\"#method.toggle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.toggle\" class=\"fn\">toggle</a>(&amp;mut self)<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a>&lt;Output = Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Invert the boolean value of the signal. This will trigger an update on all subscribers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#110-115\">Source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.index_mut\" class=\"fn\">index_mut</a>&lt;I&gt;(\n    &amp;mut self,\n    index: I,\n) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Writable.html#associatedtype.Mut\" title=\"type dioxus::prelude::Writable::Mut\">Mut</a>&lt;'_, &lt;Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Index into the inner value and return a reference to the result.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#122-124\">Source</a><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.take\" class=\"fn\">take</a>(&amp;mut self) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a><div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Takes the value out of the Signal, leaving a Default in its place.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/write.rs.html#131-133\">Source</a><a href=\"#method.replace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus/prelude/trait.Writable.html#method.replace\" class=\"fn\">replace</a>(&amp;mut self, value: Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a><div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus/prelude/trait.Readable.html#associatedtype.Target\" title=\"type dioxus::prelude::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Replace the value in the Signal, returning the old value.</div></details></div></details>","Writable","dioxus::prelude::SyncSignal"],["<section id=\"impl-Copy-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#715\">Source</a><a href=\"#impl-Copy-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section>","Copy","dioxus::prelude::SyncSignal"],["<section id=\"impl-Eq-for-Signal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/signal.rs.html#483\">Source</a><a href=\"#impl-Eq-for-Signal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"dioxus/prelude/struct.Signal.html\" title=\"struct dioxus::prelude::Signal\">Signal</a>&lt;T, S&gt;<div class=\"where\">where\n    T: 'static,\n    S: <a class=\"trait\" href=\"dioxus/prelude/trait.Storage.html\" title=\"trait dioxus::prelude::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus/prelude/struct.SignalData.html\" title=\"struct dioxus::prelude::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section>","Eq","dioxus::prelude::SyncSignal"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[93149]}