(function() {
    var type_impls = Object.fromEntries([["dioxus_desktop",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Icon\" class=\"impl\"><a class=\"src rightside\" href=\"src/tray_icon/icon.rs.html#116\">Source</a><a href=\"#impl-Clone-for-Icon\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"dioxus_desktop/trayicon/struct.Icon.html\" title=\"struct dioxus_desktop::trayicon::Icon\">Icon</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tray_icon/icon.rs.html#116\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dioxus_desktop/trayicon/struct.Icon.html\" title=\"struct dioxus_desktop::trayicon::Icon\">Icon</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","dioxus_desktop::trayicon::DioxusTrayIcon"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Icon\" class=\"impl\"><a class=\"src rightside\" href=\"src/tray_icon/icon.rs.html#121\">Source</a><a href=\"#impl-Debug-for-Icon\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"dioxus_desktop/trayicon/struct.Icon.html\" title=\"struct dioxus_desktop::trayicon::Icon\">Icon</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tray_icon/icon.rs.html#122\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, formatter: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","dioxus_desktop::trayicon::DioxusTrayIcon"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Icon\" class=\"impl\"><a class=\"src rightside\" href=\"src/tray_icon/icon.rs.html#127\">Source</a><a href=\"#impl-Icon\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dioxus_desktop/trayicon/struct.Icon.html\" title=\"struct dioxus_desktop::trayicon::Icon\">Icon</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rgba\" class=\"method\"><a class=\"src rightside\" href=\"src/tray_icon/icon.rs.html#132\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_desktop/trayicon/struct.Icon.html#tymethod.from_rgba\" class=\"fn\">from_rgba</a>(\n    rgba: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    width: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n    height: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"dioxus_desktop/trayicon/struct.Icon.html\" title=\"struct dioxus_desktop::trayicon::Icon\">Icon</a>, <a class=\"enum\" href=\"dioxus_desktop/trayicon/enum.BadIcon.html\" title=\"enum dioxus_desktop::trayicon::BadIcon\">BadIcon</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an icon from 32bpp RGBA data.</p>\n<p>The length of <code>rgba</code> must be divisible by 4, and <code>width * height</code> must equal\n<code>rgba.len() / 4</code>. Otherwise, this will return a <code>BadIcon</code> error.</p>\n</div></details></div></details>",0,"dioxus_desktop::trayicon::DioxusTrayIcon"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[5956]}