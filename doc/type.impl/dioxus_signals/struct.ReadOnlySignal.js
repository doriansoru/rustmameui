(function() {
    var type_impls = Object.fromEntries([["dioxus_signals",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#148-152\">Source</a><a href=\"#impl-Clone-for-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: 'static, S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#149-151\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#139-142\">Source</a><a href=\"#impl-Debug-for-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + 'static, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#139-142\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#143-146\">Source</a><a href=\"#impl-Default-for-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + 'static, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#143-146\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#131-137\">Source</a><a href=\"#impl-Deref-for-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt; + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#132\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>() -&gt; T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#134-136\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#139-142\">Source</a><a href=\"#impl-Display-for-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + 'static, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#139-142\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMemo%3CT%3E%3E-for-ReadOnlySignal%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/memo.rs.html#31-38\">Source</a><a href=\"#impl-From%3CMemo%3CT%3E%3E-for-ReadOnlySignal%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.Memo.html\" title=\"struct dioxus_signals::Memo\">Memo</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/memo.rs.html#35-37\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"struct\" href=\"dioxus_signals/struct.Memo.html\" title=\"struct dioxus_signals::Memo\">Memo</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Memo<T>>","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignal%3CT,+S%3E%3E-for-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#17-21\">Source</a><a href=\"#impl-From%3CSignal%3CT,+S%3E%3E-for-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: 'static, S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.Signal.html\" title=\"struct dioxus_signals::Signal\">Signal</a>&lt;T, S&gt;&gt; for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#18-20\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(inner: <a class=\"struct\" href=\"dioxus_signals/struct.Signal.html\" title=\"struct dioxus_signals::Signal\">Signal</a>&lt;T, S&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Signal<T, S>>","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoAttributeValue-for-ReadOnlySignal%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#107-114\">Source</a><a href=\"#impl-IntoAttributeValue-for-ReadOnlySignal%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"dioxus_core/nodes/trait.IntoAttributeValue.html\" title=\"trait dioxus_core::nodes::IntoAttributeValue\">IntoAttributeValue</a> for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"dioxus_core/nodes/trait.IntoAttributeValue.html\" title=\"trait dioxus_core::nodes::IntoAttributeValue\">IntoAttributeValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#111-113\">Source</a><a href=\"#method.into_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_core/nodes/trait.IntoAttributeValue.html#tymethod.into_value\" class=\"fn\">into_value</a>(self) -&gt; <a class=\"enum\" href=\"dioxus_core/nodes/enum.AttributeValue.html\" title=\"enum dioxus_core::nodes::AttributeValue\">AttributeValue</a></h4></section></summary><div class='docblock'>Convert into an attribute value</div></details></div></details>","IntoAttributeValue","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynNode-for-ReadOnlySignal%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#116-123\">Source</a><a href=\"#impl-IntoDynNode-for-ReadOnlySignal%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"dioxus_core/nodes/trait.IntoDynNode.html\" title=\"trait dioxus_core::nodes::IntoDynNode\">IntoDynNode</a> for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"dioxus_core/nodes/trait.IntoDynNode.html\" title=\"trait dioxus_core::nodes::IntoDynNode\">IntoDynNode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_dyn_node\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#120-122\">Source</a><a href=\"#method.into_dyn_node\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_core/nodes/trait.IntoDynNode.html#tymethod.into_dyn_node\" class=\"fn\">into_dyn_node</a>(self) -&gt; <a class=\"enum\" href=\"dioxus_core/nodes/enum.DynamicNode.html\" title=\"enum dioxus_core::nodes::DynamicNode\">DynamicNode</a></h4></section></summary><div class='docblock'>Consume this item and produce a DynamicNode</div></details></div></details>","IntoDynNode","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CT%3E-for-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#139-142\">Source</a><a href=\"#impl-PartialEq%3CT%3E-for-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + 'static, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;T&gt; for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#139-142\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<T>","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#125-129\">Source</a><a href=\"#impl-PartialEq-for-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: 'static, S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#126-128\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReadOnlySignal%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#23-29\">Source</a><a href=\"#impl-ReadOnlySignal%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: 'static&gt; <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#26-28\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_signals/struct.ReadOnlySignal.html#tymethod.new\" class=\"fn\">new</a>(signal: <a class=\"struct\" href=\"dioxus_signals/struct.Signal.html\" title=\"struct dioxus_signals::Signal\">Signal</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new read-only signal.</p>\n</div></details></div></details>",0,"dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#31-65\">Source</a><a href=\"#impl-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: 'static, S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt;&gt; <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_maybe_sync\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#34-36\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_signals/struct.ReadOnlySignal.html#tymethod.new_maybe_sync\" class=\"fn\">new_maybe_sync</a>(signal: <a class=\"struct\" href=\"dioxus_signals/struct.Signal.html\" title=\"struct dioxus_signals::Signal\">Signal</a>&lt;T, S&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new read-only signal that is maybe sync.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.origin_scope\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#39-41\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_signals/struct.ReadOnlySignal.html#tymethod.origin_scope\" class=\"fn\">origin_scope</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dioxus_core/scopes/struct.ScopeId.html\" title=\"struct dioxus_core::scopes::ScopeId\">ScopeId</a></h4></section></summary><div class=\"docblock\"><p>Get the scope that the signal was created in.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.id\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#44-46\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_signals/struct.ReadOnlySignal.html#tymethod.id\" class=\"fn\">id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"generational_box/struct.GenerationalBoxId.html\" title=\"struct generational_box::GenerationalBoxId\">GenerationalBoxId</a></h4></section></summary><div class=\"docblock\"><p>Get the id of the signal.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.point_to\" class=\"method\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#49-51\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dioxus_signals/struct.ReadOnlySignal.html#tymethod.point_to\" class=\"fn\">point_to</a>(&amp;self, other: Self) -&gt; <a class=\"type\" href=\"generational_box/error/type.BorrowResult.html\" title=\"type generational_box::error::BorrowResult\">BorrowResult</a></h4></section></summary><div class=\"docblock\"><p>Point to another signal</p>\n</div></details></div></details>",0,"dioxus_signals::read_only_signal::ReadSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Readable-for-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#67-85\">Source</a><a href=\"#impl-Readable-for-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt;&gt; <a class=\"trait\" href=\"dioxus_signals/trait.Readable.html\" title=\"trait dioxus_signals::Readable\">Readable</a> for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_peek_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#82-84\">Source</a><a href=\"#method.try_peek_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#tymethod.try_peek_unchecked\" class=\"fn\">try_peek_unchecked</a>(&amp;self) -&gt; <a class=\"type\" href=\"generational_box/error/type.BorrowResult.html\" title=\"type generational_box::error::BorrowResult\">BorrowResult</a>&lt;S::<a class=\"associatedtype\" href=\"dioxus_signals/trait.AnyStorage.html#associatedtype.Ref\" title=\"type dioxus_signals::AnyStorage::Ref\">Ref</a>&lt;'static, T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the current value of the signal. <strong>Unlike read, this will not subscribe the current scope to the signal which can cause parts of your UI to not update.</strong></p>\n<p>If the signal has been dropped, this will panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#68\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dioxus_signals/trait.Readable.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The target type of the reference.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Storage\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#69\">Source</a><a href=\"#associatedtype.Storage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dioxus_signals/trait.Readable.html#associatedtype.Storage\" class=\"associatedtype\">Storage</a> = S</h4></section></summary><div class='docblock'>The type of the storage this readable uses.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#72-76\">Source</a><a href=\"#method.try_read_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#tymethod.try_read_unchecked\" class=\"fn\">try_read_unchecked</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"dioxus_signals/type.ReadableRef.html\" title=\"type dioxus_signals::ReadableRef\">ReadableRef</a>&lt;'static, Self&gt;, <a class=\"enum\" href=\"dioxus_signals/enum.BorrowError.html\" title=\"enum dioxus_signals::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class='docblock'>Try to get a reference to the value without checking the lifetime. This will subscribe the current scope to the signal. <a href=\"dioxus_signals/trait.Readable.html#tymethod.try_read_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#68-100\">Source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.map\" class=\"fn\">map</a>&lt;O&gt;(\n    self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;Self::<a class=\"associatedtype\" href=\"dioxus_signals/trait.Readable.html#associatedtype.Target\" title=\"type dioxus_signals::Readable::Target\">Target</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;O</a> + 'static,\n) -&gt; <a class=\"struct\" href=\"dioxus_signals/struct.MappedSignal.html\" title=\"struct dioxus_signals::MappedSignal\">MappedSignal</a>&lt;O, Self::<a class=\"associatedtype\" href=\"dioxus_signals/trait.Readable.html#associatedtype.Storage\" title=\"type dioxus_signals::Readable::Storage\">Storage</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'static,</div></h4></section></summary><div class='docblock'>Map the readable type to a new type. This lets you provide a view into a readable type without needing to clone the inner value. <a href=\"dioxus_signals/trait.Readable.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#106-108\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.read\" class=\"fn\">read</a>(&amp;self) -&gt; <a class=\"type\" href=\"dioxus_signals/type.ReadableRef.html\" title=\"type dioxus_signals::ReadableRef\">ReadableRef</a>&lt;'_, Self&gt;</h4></section></summary><div class='docblock'>Get the current value of the state. If this is a signal, this will subscribe the current scope to the signal.\nIf the value has been dropped, this will panic. Calling this on a Signal is the same as\nusing the signal() syntax to read and subscribe to its value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#112-115\">Source</a><a href=\"#method.try_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.try_read\" class=\"fn\">try_read</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"dioxus_signals/type.ReadableRef.html\" title=\"type dioxus_signals::ReadableRef\">ReadableRef</a>&lt;'_, Self&gt;, <a class=\"enum\" href=\"dioxus_signals/enum.BorrowError.html\" title=\"enum dioxus_signals::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class='docblock'>Try to get the current value of the state. If this is a signal, this will subscribe the current scope to the signal.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#121-123\">Source</a><a href=\"#method.read_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.read_unchecked\" class=\"fn\">read_unchecked</a>(&amp;self) -&gt; <a class=\"type\" href=\"dioxus_signals/type.ReadableRef.html\" title=\"type dioxus_signals::ReadableRef\">ReadableRef</a>&lt;'static, Self&gt;</h4></section></summary><div class='docblock'>Get a reference to the value without checking the lifetime. This will subscribe the current scope to the signal. <a href=\"dioxus_signals/trait.Readable.html#method.read_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#167-169\">Source</a><a href=\"#method.peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.peek\" class=\"fn\">peek</a>(&amp;self) -&gt; <a class=\"type\" href=\"dioxus_signals/type.ReadableRef.html\" title=\"type dioxus_signals::ReadableRef\">ReadableRef</a>&lt;'_, Self&gt;</h4></section></summary><div class='docblock'>Get the current value of the state without subscribing to updates. If the value has been dropped, this will panic. <a href=\"dioxus_signals/trait.Readable.html#method.peek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#174-177\">Source</a><a href=\"#method.try_peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.try_peek\" class=\"fn\">try_peek</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"dioxus_signals/type.ReadableRef.html\" title=\"type dioxus_signals::ReadableRef\">ReadableRef</a>&lt;'_, Self&gt;, <a class=\"enum\" href=\"dioxus_signals/enum.BorrowError.html\" title=\"enum dioxus_signals::BorrowError\">BorrowError</a>&gt;</h4></section></summary><div class='docblock'>Try to peek the current value of the signal without subscribing to updates. If the value has\nbeen dropped, this will return an error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#183-185\">Source</a><a href=\"#method.peek_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.peek_unchecked\" class=\"fn\">peek_unchecked</a>(&amp;self) -&gt; <a class=\"type\" href=\"dioxus_signals/type.ReadableRef.html\" title=\"type dioxus_signals::ReadableRef\">ReadableRef</a>&lt;'static, Self&gt;</h4></section></summary><div class='docblock'>Get the current value of the signal without checking the lifetime. <strong>Unlike read, this will not subscribe the current scope to the signal which can cause parts of your UI to not update.</strong> <a href=\"dioxus_signals/trait.Readable.html#method.peek_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#197-202\">Source</a><a href=\"#method.cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"dioxus_signals/trait.Readable.html#associatedtype.Target\" title=\"type dioxus_signals::Readable::Target\">Target</a><div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus_signals/trait.Readable.html#associatedtype.Target\" title=\"type dioxus_signals::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Clone the inner value and return it. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#206-208\">Source</a><a href=\"#method.with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.with\" class=\"fn\">with</a>&lt;O&gt;(&amp;self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;Self::<a class=\"associatedtype\" href=\"dioxus_signals/trait.Readable.html#associatedtype.Target\" title=\"type dioxus_signals::Readable::Target\">Target</a>) -&gt; O) -&gt; O</h4></section></summary><div class='docblock'>Run a function with a reference to the value. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#212-214\">Source</a><a href=\"#method.with_peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.with_peek\" class=\"fn\">with_peek</a>&lt;O&gt;(&amp;self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;Self::<a class=\"associatedtype\" href=\"dioxus_signals/trait.Readable.html#associatedtype.Target\" title=\"type dioxus_signals::Readable::Target\">Target</a>) -&gt; O) -&gt; O</h4></section></summary><div class='docblock'>Run a function with a reference to the value. If the value has been dropped, this will panic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read.rs.html#218-223\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_signals/trait.Readable.html#method.index\" class=\"fn\">index</a>&lt;I&gt;(\n    &amp;self,\n    index: I,\n) -&gt; <a class=\"type\" href=\"dioxus_signals/type.ReadableRef.html\" title=\"type dioxus_signals::ReadableRef\">ReadableRef</a>&lt;'_, Self, &lt;Self::<a class=\"associatedtype\" href=\"dioxus_signals/trait.Readable.html#associatedtype.Target\" title=\"type dioxus_signals::Readable::Target\">Target</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"dioxus_signals/trait.Readable.html#associatedtype.Target\" title=\"type dioxus_signals::Readable::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Index into the inner value and return a reference to the result. If the value has been dropped or the index is invalid, this will panic.</div></details></div></details>","Readable","dioxus_signals::read_only_signal::ReadSignal"],["<section id=\"impl-Copy-for-ReadOnlySignal%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_signals/read_only_signal.rs.html#154\">Source</a><a href=\"#impl-Copy-for-ReadOnlySignal%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: 'static, S: <a class=\"trait\" href=\"dioxus_signals/trait.Storage.html\" title=\"trait dioxus_signals::Storage\">Storage</a>&lt;<a class=\"struct\" href=\"dioxus_signals/struct.SignalData.html\" title=\"struct dioxus_signals::SignalData\">SignalData</a>&lt;T&gt;&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"dioxus_signals/struct.ReadOnlySignal.html\" title=\"struct dioxus_signals::ReadOnlySignal\">ReadOnlySignal</a>&lt;T, S&gt;</h3></section>","Copy","dioxus_signals::read_only_signal::ReadSignal"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[44669]}